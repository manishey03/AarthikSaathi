@page "/login"
@using AarthikSaathi_22069007.Models
@using AarthikSaathi_22069007.Utilities
@inject NavigationManager NavigationManager

<div style="width: 100%; height: 100%; display: flex; flex-direction: column; align-items: center; justify-content: center; font-family: Arial, sans-serif;">
    <div style="background-color: #ffffff; padding: 20px; border-radius: 8px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); width: 300px;">
        <h2 style="text-align: center; margin-bottom: 20px;">Login</h2>
        <label>Username</label>
        <input @bind="Username" type="text" style="width: 100%; padding: 8px; margin-bottom: 15px; border: 1px solid #ccc; border-radius: 4px;" />
        <label>Password</label>
        <input @bind="Password" type="password" style="width: 100%; padding: 8px; margin-bottom: 15px; border: 1px solid #ccc; border-radius: 4px;" />
        <button @onclick="PerformLogin" style="width: 100%; padding: 10px; background-color: #2D9CFD; color: white; border: none; border-radius: 4px;">Login</button>
        @if (!string.IsNullOrEmpty(ErrorMessage))
        {
            <p style="color: red; margin-top: 10px;">@ErrorMessage</p>
        }
    </div>
</div>

@code {
    private string Username { get; set; } = string.Empty;
    private string Password { get; set; } = string.Empty;
    private string ErrorMessage { get; set; } = string.Empty;

    private async Task PerformLogin()
    {
        var users = await JsonFileHandler.ReadDataAsync<User>("wwwroot/data/users.json");
        var user = users.FirstOrDefault(u => u.Username == Username && u.Password == Password);

        if (user != null)
        {
            UserSession.Login(user);
            NavigationManager.NavigateTo("/");
        }
        else
        {
            ErrorMessage = "Invalid username or password.";
        }
    }
}
