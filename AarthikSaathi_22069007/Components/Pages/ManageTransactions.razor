@page "/manageTransaction"
@using AarthikSaathi_22069007.Models
@using AarthikSaathi_22069007.Utilities
@inject NavigationManager NavigationManager

<div style="max-width: 1000px; margin: auto; padding: 20px; font-family: Arial, sans-serif;">
    <h2 style="text-align: center; color: #2D9CFD; margin-bottom: 40px;">Manage Transactions</h2>

    <!-- Filtering Options -->
    <div style="margin-bottom: 30px; display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 20px;">
        <div>
            <label for="filterType" style="display: block; font-weight: bold; margin-bottom: 8px;">Filter by Type</label>
            <select @bind="FilterType" id="filterType" style="padding: 10px; width: 100%; border: 1px solid #ccc; border-radius: 4px;">
                <option value="">All</option>
                <option value="credit">Credit</option>
                <option value="debit">Debit</option>
                <option value="debt">Debt</option>
            </select>
        </div>
        <div>
            <label for="searchTags" style="display: block; font-weight: bold; margin-bottom: 8px;">Search by Title</label>
            <input @bind="SearchTags" type="text" id="searchTags" placeholder="Enter tags (e.g., groceries, rent)"
                   style="padding: 10px; width: 100%; border: 1px solid #ccc; border-radius: 4px;" />
        </div>
        <div>
            <label for="startDate" style="display: block; font-weight: bold; margin-bottom: 8px;">Start Date</label>
            <input @bind="StartDate" type="date" id="startDate"
                   style="padding: 10px; width: 100%; border: 1px solid #ccc; border-radius: 4px;" />
        </div>
        <div>
            <label for="endDate" style="display: block; font-weight: bold; margin-bottom: 8px;">End Date</label>
            <input @bind="EndDate" type="date" id="endDate"
                   style="padding: 10px; width: 100%; border: 1px solid #ccc; border-radius: 4px;" />
        </div>
        <div>
            <label for="sortOrder" style="display: block; font-weight: bold; margin-bottom: 8px;">Sort by Date</label>
            <select @bind="SortOrder" id="sortOrder"
                    style="padding: 10px; width: 100%; border: 1px solid #ccc; border-radius: 4px;">
                <option value="asc">Oldest to Newest</option>
                <option value="desc">Newest to Oldest</option>
            </select>
        </div>
        <div style="display: flex; align-items: flex-end;">
            <button @onclick="ApplyFilters"
                    style="padding: 12px 20px; background: #4CAF50; color: white; border: none; border-radius: 4px; cursor: pointer; width: 100%;">
                Filter/Search
            </button>
        </div>
    </div>

    <!-- Transactions Table Heading -->
    <h3 style="margin-bottom: 20px; font-size: 20px; color: #333; text-align: left; border-bottom: 2px solid #2D9CFD; padding-bottom: 10px;">
        Transaction Records
    </h3>

    <!-- Conditional Message -->
    @if (ShowNoTransactionsMessage)
    {
        <p style="text-align: center; color: red; font-weight: bold; margin-top: 20px;">
            No transactions performed on the selected criteria.
        </p>
    }

    <!-- Transactions Table -->
    @if (FilteredTransactions.Any())
    {
        <table style="width: 100%; border-collapse: collapse; margin-top: 20px; background: #fff; border-radius: 8px; overflow: hidden; box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);">
            <thead>
                <tr style="background: #2D9CFD; color: white;">
                    <th style="padding: 15px; text-align: left; border-right: 1px solid #e0e0e0;">Date</th>
                    <th style="padding: 15px; text-align: left; border-right: 1px solid #e0e0e0;">Tags</th>
                    <th style="padding: 15px; text-align: left; border-right: 1px solid #e0e0e0;">Type</th>
                    <th style="padding: 15px; text-align: left; border-right: 1px solid #e0e0e0;">Amount</th>
                    <th style="padding: 15px; text-align: left;">Notes</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var transaction in FilteredTransactions)
                {
                    <tr style="border-bottom: 1px solid #e0e0e0;">
                        <td style="padding: 15px;">@transaction.TransactionDate.ToString("yyyy-MM-dd")</td>
                        <td style="padding: 15px;">@string.Join(", ", transaction.Tags)</td>
                        <td style="padding: 15px;">@transaction.TransactionType</td>
                        <td style="padding: 15px;">@transaction.Amount</td>
                        <td style="padding: 15px;">@transaction.Notes</td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

@code {
    private List<Transaction> Transactions { get; set; } = new();
    private List<Transaction> FilteredTransactions { get; set; } = new();

    private string FilterType { get; set; } = string.Empty;
    private string SearchTags { get; set; } = string.Empty;
    private DateTime? StartDate { get; set; }
    private DateTime? EndDate { get; set; }
    private string SortOrder { get; set; } = "asc";
    private bool ShowNoTransactionsMessage { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        if (!UserSession.IsLoggedIn())
        {
            NavigationManager.NavigateTo("/login");
            return;
        }

        var allTransactions = await JsonFileHandler.ReadDataAsync<Transaction>("wwwroot/data/transactions.json");
        Transactions = allTransactions.Where(t => t.UserId == UserSession.CurrentUser!.UserId).ToList();
        ApplyFilters();
    }

    private void ApplyFilters()
    {
        var query = Transactions.AsQueryable();

        if (!string.IsNullOrEmpty(FilterType))
        {
            query = query.Where(t => t.TransactionType.Equals(FilterType, StringComparison.OrdinalIgnoreCase));
        }
        if (!string.IsNullOrEmpty(SearchTags))
        {
            var searchTagsList = SearchTags.Split(',', StringSplitOptions.RemoveEmptyEntries)
                                           .Select(tag => tag.Trim().ToLower())
                                           .ToList();

            query = query.Where(t => t.Tags.Any(tag => searchTagsList.Contains(tag.ToLower())));
        }
        if (StartDate.HasValue)
        {
            query = query.Where(t => t.TransactionDate >= StartDate.Value);
        }
        if (EndDate.HasValue)
        {
            query = query.Where(t => t.TransactionDate <= EndDate.Value);
        }
        if (SortOrder == "asc")
        {
            query = query.OrderBy(t => t.TransactionDate);
        }
        else
        {
            query = query.OrderByDescending(t => t.TransactionDate);
        }

        FilteredTransactions = query.ToList();
        ShowNoTransactionsMessage = !FilteredTransactions.Any();
    }
}
